<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        ">
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- 这样通过配置AnnotationMethodHandlerAdapter类messageConverters属性来指定编码。 -->
	<!-- 记住，需要把bean部分加入到<context:component-scan base-package="com.zlscw.mvc" 
		/>前面， -->
	<!-- 这样就可以在jquery中直接调用而不出现乱码了。 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<!-- class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> -->
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 会自动注册了validator ConversionService -->
	<mvc:annotation-driven validator="validator"
		conversion-service="conversion-service" />

	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.mymaven.web"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

<!-- 以下选用，使用后将引起spring 管理事务失效，update delete不执行，需要手动开启事务并commit -->
<!-- 	<context:component-scan base-package="com.mymaven.service" -->
<!-- 		use-default-filters="false"> -->
<!-- 		<context:include-filter type="annotation" -->
<!-- 			expression="org.springframework.stereotype.Service" /> -->
<!-- 	</context:component-scan> -->
	<mvc:annotation-driven />

	<!-- 拦截器 -->
	<!-- <mvc:interceptors/> -->
	<!-- <bean class="com.core.mvc.MyInteceptor" /> -->
	<!-- </mvc:interceptors> -->

	<!-- mvc静态资源文件访问（与下面的defalutViewResolver相同） -->
	<mvc:default-servlet-handler />
	<!-- <bean class="com.core.mvc.MyInteceptor" /> -->
	<!-- </mvc:interceptors> -->

	<!-- 定义首页 -->
	<mvc:view-controller path="/" view-name="redirect:/index.jsp" />

	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="3">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置MutipartResolver，文件上传 请求的编码格式UTF-8，默认是ISO-8859-1 上传文件大小上限，单位为字节（5MB） -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8" p:maxUploadSize="5242880" />

	<!-- 控制器异常处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">
					error_all
				</prop>
			</props>
		</property>
	</bean>
</beans>
